{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/authentication.service\";\nexport class AuthGuard {\n  constructor(authservice) {\n    this.authservice = authservice;\n  }\n  canActivate() {\n    if (this.authservice.isUserLoggedIn()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthenticationService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAaA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAkC;IAAlC,gBAAW,GAAXA,WAAW;EAA0B;EACzDC,WAAW;IACT,IAAI,IAAI,CAACD,WAAW,CAACE,cAAc,EAAE,EAAE;MACrC,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;;AARWJ,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAK,SAATL,SAAS;EAAAM,YAFR;AAAM","names":["AuthGuard","constructor","authservice","canActivate","isUserLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["E:\\vaibhavO\\Ang\\loginPage\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { AuthenticationService } from './services/authentication.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authservice: AuthenticationService) {}\n  canActivate() {\n    if (this.authservice.isUserLoggedIn()) {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}