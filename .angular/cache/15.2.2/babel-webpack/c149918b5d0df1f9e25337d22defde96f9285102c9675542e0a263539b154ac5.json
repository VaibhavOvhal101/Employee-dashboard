{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  constructor(post, primengConfig, http) {\n    this.post = post;\n    this.primengConfig = primengConfig;\n    this.http = http;\n    this.Users = [];\n    this.first = 0;\n    this.rows = 5;\n    // -----------------DialogBox Validations--------------------------\n    this.dialogForm = new FormGroup({\n      Name: new FormControl('', [Validators.required]),\n      mobile: new FormControl('', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]),\n      Address: new FormControl('', [Validators.required]),\n      Age: new FormControl('', [Validators.required])\n    });\n  }\n  // ---------------Employee list From Json.DB------------------\n  ngOnInit() {\n    this.setTableData();\n  }\n  setTableData() {\n    this.post.employee().subscribe(response => {\n      this.empList = response;\n      console.log(this.empList);\n    });\n    this.primengConfig.ripple = true;\n  }\n  get Name() {\n    return this.dialogForm.get('Name');\n  }\n  get mobile() {\n    return this.dialogForm.get('mobile');\n  }\n  get Address() {\n    return this.dialogForm.get('Address');\n  }\n  get Age() {\n    return this, this.dialogForm.get('Age');\n  }\n  // ----------------post Method-----------------------\n  displayResponsive(userData) {\n    console.log(userData);\n    let valueOfForm;\n    valueOfForm = userData.value;\n    this.http.post('http://localhost:3000/Users', valueOfForm).subscribe(res => {\n      console.log(res);\n      this.setTableData();\n      this.dialogForm.reset();\n      this.visible = false;\n    });\n    // this.displayBasic = false\n  }\n\n  showBasicDialog() {\n    this.visible = true;\n  }\n  onPageChange(event) {\n    this.first = event.first;\n    this.rows = event.rows;\n  }\n  // onDelete(deleteRec: any) {\n  //   console.log(deleteRec)\n  // }\n  // -------------------Edit-----------------\n  onEdit(id) {\n    console.log(this.empList);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","DashboardComponent","constructor","post","primengConfig","http","Name","required","mobile","pattern","Address","Age","ngOnInit","setTableData","employee","subscribe","response","empList","console","log","ripple","dialogForm","get","displayResponsive","userData","valueOfForm","value","res","reset","visible","showBasicDialog","onPageChange","event","first","rows","onEdit","id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\vaibhavO\\Ang\\loginPage\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core'\nimport { EmpTableService } from '../services/emp-table.service'\nimport { PrimeNGConfig } from 'primeng/api'\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  Users = []\n  empList: any\n  value3: any\n  displayBasic: any\n  // Users: any\n  // Name: any\n  // showDialog: any\n  visible: any\n  first: number = 0\n\n  rows: number = 5\n\n  constructor(\n    private post: EmpTableService,\n    private primengConfig: PrimeNGConfig,\n    private http: HttpClient,\n  ) {}\n\n  // ---------------Employee list From Json.DB------------------\n  ngOnInit() {\n    this.setTableData()\n  }\n  setTableData() {\n    this.post.employee().subscribe((response) => {\n      this.empList = response\n      console.log(this.empList)\n    })\n    this.primengConfig.ripple = true\n  }\n\n  // -----------------DialogBox Validations--------------------------\n\n  dialogForm = new FormGroup({\n    Name: new FormControl('', [Validators.required]),\n    mobile: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$'),\n    ]),\n    Address: new FormControl('', [Validators.required]),\n    Age: new FormControl('', [Validators.required]),\n  })\n  get Name() {\n    return this.dialogForm.get('Name')\n  }\n  get mobile() {\n    return this.dialogForm.get('mobile')\n  }\n  get Address() {\n    return this.dialogForm.get('Address')\n  }\n  get Age() {\n    return this, this.dialogForm.get('Age')\n  }\n\n  // ----------------post Method-----------------------\n  displayResponsive(userData: any) {\n    console.log(userData)\n    let valueOfForm\n    valueOfForm = userData.value\n    this.http\n      .post('http://localhost:3000/Users', valueOfForm)\n      .subscribe((res) => {\n        console.log(res)\n        this.setTableData()\n        this.dialogForm.reset()\n        this.visible = false\n      })\n    // this.displayBasic = false\n  }\n  showBasicDialog() {\n    this.visible = true\n  }\n  onPageChange(event: any) {\n    this.first = event.first\n    this.rows = event.rows\n  }\n\n  // onDelete(deleteRec: any) {\n  //   console.log(deleteRec)\n  // }\n\n  // -------------------Edit-----------------\n  onEdit(id: any) {\n    console.log(this.empList)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}