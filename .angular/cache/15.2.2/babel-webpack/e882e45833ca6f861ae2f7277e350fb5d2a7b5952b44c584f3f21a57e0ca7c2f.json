{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/button\";\nfunction LoginComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \" *This field is reqiured \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \" *This field is reqiured \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(router, notification) {\n    this.router = router;\n    this.notification = notification;\n    this.loginForm = new FormGroup({\n      userName: new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]),\n      password: new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z]+$')])\n    });\n    this.submitted = false;\n  }\n  get userName() {\n    return this.loginForm.get('userName');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  onSubmit() {\n    console.log(this.playerName);\n  }\n  sendData(message) {\n    this.notification.sendNotification(message.value);\n    console.log(message.value);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ServiceService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"flex\", \"justify-content-center\"], [1, \"card\", \"bg-dark\", \"text-white\", \"p-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-12\"], [\"pInputText\", \"\", \"id\", \"form2Example1\", \"formControlName\", \"userName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"data\", \"\"], [\"style\", \"color: red; font-size: 12px;\", 4, \"ngIf\"], [\"pInputText\", \"\", \"type\", \"password\", \"id\", \"form2Example2\", \"formControlName\", \"password\", 1, \"form-control\"], [\"pButton\", \"\", \"type\", \"submit\", \"label\", \"Sign In\", \"routerLink\", \"/home\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"click\"], [2, \"color\", \"red\", \"font-size\", \"12px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"h5\");\n      i0.ɵɵtext(4, \"Please login to your account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4);\n      i0.ɵɵtext(7, \"Login:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.playerName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LoginComponent_span_11_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"div\", 4);\n      i0.ɵɵtext(15, \" Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4);\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵtemplate(18, LoginComponent_span_18_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"div\", 4)(22, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_22_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.sendData(_r0));\n      });\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.playerName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.userName && ctx.userName.invalid && ctx.userName.touched);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.password && ctx.password.invalid && ctx.password.touched);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.ButtonDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUciLCJzb3VyY2VzQ29udGVudCI6WyIvKiAuY2VudGVyIHtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgdHJhbnNpdGlvbjogMC4zcztcclxuICB3aWR0aDogMTUlO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59ICovXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;ICqEzDC,gCAGC;IACCA,yCACF;IAAAA,iBAAO;;;;;IAkBPA,gCAGC;IACCA,yCACF;IAAAA,iBAAO;;;ADxFjB,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,MAAc,EAAUC,YAA4B;IAApD,WAAM,GAAND,MAAM;IAAkB,iBAAY,GAAZC,YAAY;IAExD,cAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAC5BC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,OAAO,CAAC,aAAa,CAAC,CAClC,CAAC;MACFC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAC5BC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,OAAO,CAAC,aAAa,CAAC,CAClC;KACF,CAAC;IAiBF,cAAS,GAAG,KAAK;EA5B0D;EAY3E,IAAIF,QAAQ;IACV,OAAO,IAAI,CAACI,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EACvC;EACA,IAAIF,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EACvC;EACAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC;EAC9B;EACAC,QAAQ,CAACC,OAA2B;IAClC,IAAI,CAACZ,YAAY,CAACa,gBAAgB,CAACD,OAAO,CAACE,KAAK,CAAC;IACjDN,OAAO,CAACC,GAAG,CAACG,OAAO,CAACE,KAAK,CAAC;EAC5B;;AAzBWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCuC3BvB,8BAAyC;MAE/BA;QAAA,OAAYwB,cAAU;MAAA,EAAC;MAM3BxB,0BAAI;MAAAA,4CAA4B;MAAAA,iBAAK;MAErCA,8BAAiB;MACKA,sBAAM;MAAAA,iBAAM;MAChCA,8BAAoB;MAMhBA;QAAA;MAAA,EAAwB;MAL1BA,iBAOE;MACFA,mEAKO;MACPA,sBAAM;MACRA,iBAAM;MAIRA,+BAAiB;MAEbA,4BACF;MAAAA,iBAAM;MACNA,+BAAoB;MAClBA,4BAME;MACFA,mEAKO;MACTA,iBAAM;MAERA,sBAAM;MACNA,+BAAiB;MAQXA;QAAAA;QAAA;QAAA,OAASA,gCAAc;MAAA,EAAC;MACzBA,iBAAS;;;MA5DcA,eAAuB;MAAvBA,yCAAuB;MAgB7CA,eAAwB;MAAxBA,wCAAwB;MAKvBA,eAAsD;MAAtDA,mFAAsD;MAuBtDA,eAAsD;MAAtDA,mFAAsD","names":["FormGroup","FormControl","Validators","i0","LoginComponent","constructor","router","notification","userName","required","pattern","password","loginForm","get","onSubmit","console","log","playerName","sendData","message","sendNotification","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\vaibhavO\\Ang\\loginPage\\src\\app\\login\\login.component.ts","E:\\vaibhavO\\Ang\\loginPage\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core'\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { ServiceService } from '../services/service.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  constructor(private router: Router, private notification: ServiceService) {}\n  playerName: string | undefined\n  loginForm = new FormGroup({\n    userName: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[a-zA-Z]+$'),\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[a-zA-Z]+$'),\n    ]),\n  })\n  get userName() {\n    return this.loginForm.get('userName')\n  }\n  get password() {\n    return this.loginForm.get('password')\n  }\n  onSubmit() {\n    console.log(this.playerName)\n  }\n  sendData(message: { value: unknown }) {\n    this.notification.sendNotification(message.value)\n    console.log(message.value)\n  }\n\n  loginForm1: FormGroup | undefined\n\n  submitted = false\n}\n","<!-- <h2>Login Page</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  \n  <div class=\"form-outline mb-4\">\n    <input\n      type=\"name\"\n      id=\"form2Example1\"\n      class=\"form-control col-md-4\"\n      formControlName=\"userName\"\n      [(ngModel)]=\"playerName\"\n      #data\n    />\n    <span\n      style=\"color: red; font-size: 12px;\"\n      *ngIf=\"userName && userName.invalid && userName.touched\"\n    >\n      *This field is reqiured\n    </span>\n    <br />\n    <label class=\"form-label\" for=\"form2Example1\">Email address</label>\n  </div>\n\n  <div class=\"form-outline mb-4\">\n    <input\n      type=\"password\"\n      id=\"form2Example2\"\n      class=\"form-control col-md-4\"\n      formControlName=\"password\"\n    />\n    <span\n      style=\"color: red; font-size: 12px;\"\n      *ngIf=\"password && password.invalid && password.touched\"\n    >\n      *This field is reqiured\n    </span>\n    <br />\n    <label class=\"form-label\" for=\"form2Example2\">Password</label>\n\n    <br />\n  </div>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary btn-block mb-4 col-md-4\"\n    routerLink=\"/home\"\n    (click)=\"sendData(data)\"\n  >\n    Sign in\n  </button>\n</form> -->\n<div class=\"flex justify-content-center\">\n  <div class=\"card bg-dark text-white p-4\">\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\n      <!-- <p-panel header=\"Login Example\"> -->\n      <!-- <div\n      class=\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\"\n      style=\"margin: 10px 0px;\"\n    > -->\n      <h5>Please login to your account</h5>\n\n      <div class=\"row\">\n        <div class=\"col-12\">Login:</div>\n        <div class=\"col-12\">\n          <input\n            pInputText\n            id=\"form2Example1\"\n            class=\"form-control\"\n            formControlName=\"userName\"\n            [(ngModel)]=\"playerName\"\n            #data\n          />\n          <span\n            style=\"color: red; font-size: 12px;\"\n            *ngIf=\"userName && userName.invalid && userName.touched\"\n          >\n            *This field is reqiured\n          </span>\n          <br />\n        </div>\n        <!-- <div class=\"ui-grid-col-4\"></div> -->\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          Password:\n        </div>\n        <div class=\"col-12\">\n          <input\n            pInputText\n            type=\"password\"\n            id=\"form2Example2\"\n            class=\"form-control\"\n            formControlName=\"password\"\n          />\n          <span\n            style=\"color: red; font-size: 12px;\"\n            *ngIf=\"password && password.invalid && password.touched\"\n          >\n            *This field is reqiured\n          </span>\n        </div>\n      </div>\n      <br />\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <button\n            pButton\n            type=\"submit\"\n            label=\"Sign In\"\n            class=\"btn btn-primary btn-block\"\n            routerLink=\"/home\"\n            (click)=\"sendData(data)\"\n          ></button>\n        </div>\n      </div>\n      <!-- </div> -->\n      <!-- </p-panel> -->\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}