{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  constructor(post, primengConfig, http) {\n    this.post = post;\n    this.primengConfig = primengConfig;\n    this.http = http;\n    // -----------------DialogBox Validations--------------------------\n    this.dialogForm = new FormGroup({\n      dName: new FormControl('', [Validators.required]),\n      mNumber: new FormControl('', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]),\n      address: new FormControl('', [Validators.required]),\n      age: new FormControl('', [Validators.required])\n    });\n  }\n  // ---------------Employee list From Json.DB------------------\n  ngOnInit() {\n    this.post.employee().subscribe(response => {\n      this.empList = response;\n      console.log(this.empList);\n    });\n    this.primengConfig.ripple = true;\n  }\n  showBasicDialog() {\n    this.displayBasic = true;\n  }\n  get dName() {\n    return this.dialogForm.get('dName');\n  }\n  get mNumber() {\n    return this.dialogForm.get('mNumber');\n  }\n  get address() {\n    return this.dialogForm.get('address');\n  }\n  get age() {\n    return this, this.dialogForm.get('age');\n  }\n  // onSubmit() {\n  //   console.log(this.dialogForm.value)\n  // }\n  displayResponsive(userData) {\n    console.log(userData);\n    this.http.post('http://localhost:3000/Users', userData.value).subscribe(res => {\n      console.log(res);\n    });\n    // this.displayBasic = false\n  }\n};\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAmB,eAAe;AAGpD,SAASC,WAAW,EAAEC,SAAS,EAAUC,UAAU,QAAQ,gBAAgB;AAQpE,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YACUC,IAAqB,EACrBC,aAA4B,EAC5BC,IAAgB;IAFhB,SAAI,GAAJF,IAAI;IACJ,kBAAa,GAAbC,aAAa;IACb,SAAI,GAAJC,IAAI;IAed;IAEA,eAAU,GAAG,IAAIN,SAAS,CAAC;MACzBO,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACjDC,OAAO,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAC3BE,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACS,OAAO,CAAC,2BAA2B,CAAC,CAChD,CAAC;MACFC,OAAO,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACnDI,GAAG,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC;KAC/C,CAAC;EAxBC;EAEH;EACAK,QAAQ;IACN,IAAI,CAACT,IAAI,CAACU,QAAQ,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MAC1C,IAAI,CAACC,OAAO,GAAGD,QAAQ;MACvBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;IAC3B,CAAC,CAAC;IACF,IAAI,CAACZ,aAAa,CAACe,MAAM,GAAG,IAAI;EAClC;EACAC,eAAe;IACb,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAaA,IAAIf,KAAK;IACP,OAAO,IAAI,CAACgB,UAAU,CAACC,GAAG,CAAC,OAAO,CAAC;EACrC;EACA,IAAIf,OAAO;IACT,OAAO,IAAI,CAACc,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC;EACvC;EACA,IAAIb,OAAO;IACT,OAAO,IAAI,CAACY,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC;EACvC;EACA,IAAIZ,GAAG;IACL,OAAO,IAAI,EAAE,IAAI,CAACW,UAAU,CAACC,GAAG,CAAC,KAAK,CAAC;EACzC;EACA;EACA;EACA;EAEAC,iBAAiB,CAACC,QAKjB;IACCR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;IACrB,IAAI,CAACpB,IAAI,CACNF,IAAI,CAAC,6BAA6B,EAAEsB,QAAQ,CAACC,KAAK,CAAC,CACnDZ,SAAS,CAAEa,GAAG,IAAI;MACjBV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;IAClB,CAAC,CAAC;IACJ;EACF;CACD;;AAjEY1B,kBAAkB,eAL9BJ,SAAS,CAAC;EACT+B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW7B,kBAAkB,CAiE9B;SAjEYA,kBAAkB","names":["Component","FormControl","FormGroup","Validators","DashboardComponent","constructor","post","primengConfig","http","dName","required","mNumber","pattern","address","age","ngOnInit","employee","subscribe","response","empList","console","log","ripple","showBasicDialog","displayBasic","dialogForm","get","displayResponsive","userData","value","res","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\vaibhavO\\Ang\\loginPage\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core'\nimport { EmpTableService } from '../services/emp-table.service'\nimport { PrimeNGConfig } from 'primeng/api'\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  empList: any\n  value3: any\n  displayBasic: any\n  Name: any\n  showDialog: any\n  constructor(\n    private post: EmpTableService,\n    private primengConfig: PrimeNGConfig,\n    private http: HttpClient,\n  ) {}\n\n  // ---------------Employee list From Json.DB------------------\n  ngOnInit() {\n    this.post.employee().subscribe((response) => {\n      this.empList = response\n      console.log(this.empList)\n    })\n    this.primengConfig.ripple = true\n  }\n  showBasicDialog() {\n    this.displayBasic = true\n  }\n\n  // -----------------DialogBox Validations--------------------------\n\n  dialogForm = new FormGroup({\n    dName: new FormControl('', [Validators.required]),\n    mNumber: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$'),\n    ]),\n    address: new FormControl('', [Validators.required]),\n    age: new FormControl('', [Validators.required]),\n  })\n  get dName() {\n    return this.dialogForm.get('dName')\n  }\n  get mNumber() {\n    return this.dialogForm.get('mNumber')\n  }\n  get address() {\n    return this.dialogForm.get('address')\n  }\n  get age() {\n    return this, this.dialogForm.get('age')\n  }\n  // onSubmit() {\n  //   console.log(this.dialogForm.value)\n  // }\n\n  displayResponsive(userData: {\n    Name: string\n    mobile: string\n    Address: string\n    Age: string\n  }) {\n    console.log(userData)\n    this.http\n      .post('http://localhost:3000/Users', userData.value)\n      .subscribe((res) => {\n        console.log(res)\n      })\n    // this.displayBasic = false\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}